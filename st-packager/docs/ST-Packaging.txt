SportsTracker packaging (macOS, Linux, Windows)
===============================================

Info
----

* the tool 'jpackage' is used for creating native application packages for
  macOS, Windows and Linux
  * jpackage has been introduced with JDK 14
    (JEP 343, http://openjdk.java.net/jeps/343)
  * so at least JDK 14 is needed for packaging
  * jpackage is the replacement for the JavaFX packager which has been removed
    from the JDK, there is also no ANT plugin available anymore
* the created packages contain the required Java Runtime Environment (JRE)
* has been tested with Adoptium / Temurin OpenJDK 25 on:
  * macOS 15, Ubuntu Linux 24.04 and Windows 11
  * the packaged app and the installers are running perfectly without problems

* this directory contains the scripts for automatic SportsTracker packaging
* each os-specific package scripts creates an installer package
  (e.g. SportsTracker-8.x.x.dmg on macOS)
* only the following java modules (jmod) are needed:
  java.base,java.desktop,java.logging,java.net.http,java.scripting,java.sql,
  java.xml,jdk.crypto.ec,jdk.localedata,jdk.jsobject,jdk.unsupported
* the created app packages are much smaller, also caused by jmod usage
  * Example for macOS:
    * SportsTracker.app 7.5.1 built with JDK 10: 220 MB
    * SportsTracker.app 7.7.1 built with JDK 14: 140 MB


HowTo package manually on local systems
---------------------------------------

First on all platforms:

* make sure that the proper JDK and Maven are installed
* make sure that environment variable JAVA_HOME is set
* build SportsTracker via 'mvn clean package'

Then on macOS:

* check the app settings and path variables in 'package-macos.sh'
* run 'package-macos.sh'
* the created SportsTracker-x.y.z.dmg package is located in directory 'package'

Then on Linux (Ubuntu):

* check the app settings and path variables in 'package-linux.sh'
* run 'package-linux.sh'
* the created DEB installer package is located in directory 'package'

Then on Windows:

* check the app settings and variables in 'package-windows.bat'
* run 'package-windows.bat'
* the created EXE installer package is located in directory 'package'


HowTo package via GitHub Actions
--------------------------------

* Packaging can be executed via GitHub Actions on remote systems at GitHub
  without the need for installing and executing the target operating system.
* Supported package types:
  * macOS x64 (DMG package)
  * Ubuntu Linux amd64 (DEB package)
  * Windows x64 (EXE package)
* For packaging just execute the "Package for XYZ" Action for the appropriate
  target system.
* The created package can be downloaded as a build artifact afterwards, will
  be removed automatically after 5 retention days.


macOS Packaging Notes
---------------------

* nothing special here


Linux Packaging Notes
---------------------

* Depending on the Linux system the created installer package is either an DEB
  (e.g. Ubuntu or Debian) or an RPM (e.g. Fedora) package.
* DEB package creation requires the packages 'fakeroot' and 'binutils', can be
  installed from the distribution repository.
* Package installation command: sudo dpkg -i sportstracker-x.y.z.deb
* Package uninstall command: sudo dpkg -P sportstracker


Windows Packaging Notes
-----------------------

* For EXE installer creation the WiX Toolset (https://wixtoolset.org/) is being
  used (version 3.x). This needs to be installed on the packaging system and
  executable from the PATH variable.
